Example



Pick any two elements, say .

Testing for all pairs, the solution  provides the minimum unfairness.

Note: Integers in  may not be unique.

Function Description

Complete the maxMin function in the editor below.
maxMin has the following parameter(s):

int k: the number of elements to select
int arr[n]:: an array of integers
Returns

int: the minimum possible unfairness
Input Format

The first line contains an integer , the number of elements in array .
The second line contains an integer .
Each of the next  lines contains an integer  where .

Constraints




Sample Input 0

7
3
10
100
300
200
1000
20
30
Sample Output 0

20
Explanation 0

Here ; selecting the  integers , unfairness equals

max(10,20,30) - min(10,20,30) = 30 - 10 = 20
Sample Input 1

10
4
1
2
3
4
10
20
30
40
100
200
Sample Output 1

3
Explanation 1

Here ; selecting the  integers , unfairness equals

max(1,2,3,4) - min(1,2,3,4) = 4 - 1 = 3
Sample Input 2

5
2
1
2
1
2
1
Sample Output 2

0
Explanation 2

Here .  or  give the minimum unfairness of .

Submissions: 59
Max Score: 35
Difficulty: Medium
Rate This Challenge:

    
More
 
1
#!/bin/python3
2
?
3
import math
4
import os
5
import random
6
import re
7
import sys
8
?
9
#
10
# Complete the 'maxMin' function below.
11
#
12
# The function is expected to return an INTEGER.
13
# The function accepts following parameters:
14
#  1. INTEGER k
15
#  2. INTEGER_ARRAY arr
16
#
17
?
18
def maxMin(k, arr):
19
    # Write your code here
20
?
21
if __name__ == '__main__':
22
    fptr = open(os.environ['OUTPUT_PATH'], 'w')
23
?
24
    n = int(input().strip())
25
?
26
    k = int(input().strip())
27
?
28
    arr = []
29
?
30
    for _ in range(n):
31
        arr_item = int(input().strip())
32
        arr.append(arr_item)
33
?
34
    result = maxMin(k, arr)
35
?
36
    fptr.write(str(result) + '\n')
37
?
38
    fptr.close()